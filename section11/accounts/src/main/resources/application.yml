spring:
  application:
    name: accounts
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  profiles:
    active: default
  config:
    import: optional:configserver:http://localhost:8071
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
#  rabbitmq:
#    host: "localhost"
#    port: 5672
#    username: guest
#    password: guest

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: accounts
    description: "Account Application"
    version: 1.0.0

server:
  port: 9090

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  endpoint:
    shutdown:
      access: unrestricted
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enable: true

logging:
  level:
    com:
      dev:
        accounts: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 10
        permitted-number-of-calls-in-half-open-state: 2
        failure-rate-threshold: 50
        wait-duration-in-open-state:
          seconds: 10

resilience4j.retry:
    configs:
      default:
        max-attempts: 3
        wait-duration:
          nanos: 10
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1s
      limitRefreshPeriod: 5s
      limitForPeriod: 1
  instances:
    getJavaVersion:
      baseConfig: default

